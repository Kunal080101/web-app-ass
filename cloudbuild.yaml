steps: 
  # Set the project
  - name: 'gcr.io/cloud-builders/gcloud'
    args: ['config', 'set', 'project', 'kunal-ica1']

# Use inline script to check and create the cluster if it doesn't exist
  - name: 'gcr.io/cloud-builders/gcloud'
    entrypoint: 'bash'
    args:
      - '-c'
      - |
        CLUSTER_NAME="my-gke-cluster"
        ZONE="us-central1-a"
        PROJECT="kunal-ica1"
        if gcloud container clusters describe $CLUSTER_NAME --zone $ZONE --project $PROJECT &>/dev/null; then
            echo "Cluster $CLUSTER_NAME already exists. Using existing cluster."
        else
            echo "Cluster $CLUSTER_NAME does not exist. Creating cluster."
            gcloud container clusters create $CLUSTER_NAME --zone $ZONE --num-nodes 3 --enable-ip-alias --no-enable-basic-auth --metadata=disable-legacy-endpoints=true --project $PROJECT
        fi

  # Get credentials for the existing cluster or newly created cluster
  - name: 'gcr.io/cloud-builders/gcloud'
    args: ['container', 'clusters', 'get-credentials', 'my-gke-cluster', '--zone', 'us-central1-a']

  # Get credentials for the cluster
  - name: 'gcr.io/cloud-builders/gcloud'
    args: ['container', 'clusters', 'get-credentials', 'my-gke-cluster', '--zone', 'us-central1-a']

  # Build and push backend Docker image
  - name: 'gcr.io/cloud-builders/docker'
    args: ['build', '-t', 'gcr.io/kunal-ica1/my-backend', './backend']
  - name: 'gcr.io/cloud-builders/docker'
    args: ['push', 'gcr.io/kunal-ica1/my-backend']

  # Build and push frontend Docker image
  - name: 'gcr.io/cloud-builders/docker'
    args: ['build', '-t', 'gcr.io/kunal-ica1/my-frontend', './frontend']
  - name: 'gcr.io/cloud-builders/docker'
    args: ['push', 'gcr.io/kunal-ica1/my-frontend']

  # Apply Kubernetes configurations
  - name: 'gcr.io/cloud-builders/kubectl'
    args: ['apply', '-f', 'backend/backend-deployment.yaml']
  - name: 'gcr.io/cloud-builders/kubectl'
    args: ['apply', '-f', 'backend/backend-service.yaml']
  - name: 'gcr.io/cloud-builders/kubectl'
    args: ['apply', '-f', 'frontend/frontend-deployment.yaml']
  - name: 'gcr.io/cloud-builders/kubectl'
    args: ['apply', '-f', 'frontend/frontend-service.yaml']

  # Update Kubernetes deployments
  - name: 'gcr.io/cloud-builders/kubectl'
    env:
      - 'CLOUDSDK_CONTAINER_CLUSTER=my-gke-cluster'
      - 'CLOUDSDK_COMPUTE_ZONE=us-central1-a'
    args:
      - 'set'
      - 'image'
      - 'deployment/backend-deployment'
      - 'backend-container=gcr.io/kunal-ica1/my-backend:latest'
      - '-n'
      - 'default'
  - name: 'gcr.io/cloud-builders/kubectl'
    env:
      - 'CLOUDSDK_COMPUTE_ZONE=us-central1-a'
    args:
      - 'set'
      - 'image'
      - 'deployment/frontend-deployment'
      - 'frontend-container=gcr.io/kunal-ica1/my-frontend:latest'
      - '-n'
      - 'default'

images:
  - 'gcr.io/kunal-ica1/my-backend'
  - 'gcr.io/kunal-ica1/my-frontend'

options:
  logging: CLOUD_LOGGING_ONLY

serviceAccount: 160356498800-compute@developer.gserviceaccount.com
